trigger:
- feature-ms-pabloSepulveda-mensaje

jobs:
- job: BuildAndPublish
  displayName: 'Build and publish'
  pool:
   vmImage: ubuntu-latest
  steps:
  - task: Maven@3
    displayName: 'Build'
    inputs:
      mavenPomFile: 'pom.xml'
      mavenOptions: '-Xmx3072m'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: 1.11
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      goals: 'clean test jacoco:report'
  - task: PublishCodeCoverageResults@1
    displayName: 'Publish code coverage results (JaCoCo)'
    inputs:
        codeCoverageTool: 'JaCoCo'
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/target/site/jacoco/jacoco.xml'
        pathToSources: '$(System.DefaultWorkingDirectory)/src/main/java/'
        reportDirectory: '$(System.DefaultWorkingDirectory)/target/site/jacoco'
        failIfCoverageEmpty: true
  - task: BuildQualityChecks@8
    displayName: 'Check Coverage 85%'
    inputs:
      checkCoverage: true
      coverageFailOption: 'fixed'
      coverageType: lines
      coverageThreshold: 85
  - task: SonarCloudPrepare@1
    displayName: 'SonarCloud Prepare'
    inputs:
      SonarCloud: 'DevOps Project'
      organization: 'psep'
      scannerMode: 'Other'
      projectKey: 'Psep_microservicio-spring'
      projectName: 'microservicio-spring'

  - task: Maven@3
    displayName: 'Code Review (SonarCloud)'
    inputs:
      mavenPomFile: 'pom.xml'
      mavenOptions: '-Xmx3072m'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: 1.11
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      goals: 'package'
      sonarQubeRunAnalysis: true
  - task: sonarcloud-buildbreaker@2
    inputs:
      SonarCloud: 'DevOps Project'
      organization: 'psep'
  - task: Docker@2
    displayName: 'Docker Login'
    inputs:
      containerRegistry: 'Docker Hub Psep'
      command: 'login'
  - task: Docker@2
    displayName: 'Docker build and publish image'
    inputs:
      containerRegistry: 'Docker Hub Psep'
      repository: 'psep/testing-web-complete'
      command: 'buildAndPush'
      Dockerfile: '**/Dockerfile'

- job: Deploy
  displayName: 'Deploy to Kubernetes and Test'
  dependsOn: BuildAndPublish
  pool: 'Default'
  steps:
  - task: Bash@3
    displayName: 'Tag image replace'
    inputs:
      targetType: 'inline'
      script: |
        cat k8s/app-deployment.yaml
        echo "Change tag image in deployment file"
        sed -i "s|_tag_|$(Build.BuildId)|g" k8s/app-deployment.yaml
        cat k8s/app-deployment.yaml
  - task: Kubernetes@1
    displayName: 'Deploy application'
    inputs:
      connectionType: 'None'
      command: 'apply'
      arguments: '-f k8s/app-deployment.yaml'
  - task: Kubernetes@1
    displayName: 'Apply app service'
    inputs:
      connectionType: 'None'
      command: 'apply'
      arguments: '-f k8s/app-service.yaml'
  - task: Bash@3
    displayName: 'Test with JMeter'
    inputs:
      targetType: 'inline'
      script: |
        /home/psep/labdevops/apache-jmeter-5.5/bin/jmeter -n -t jmeter/test.jmx -l jmeter/results.jtl
        cat jmeter/results.jtl